name: OZIP Decrypter

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

env:
  FIRMWARE_LINK: https://otaafsg-cost.realmemobile.com/RMX1941/RMX1941EX_11.C.51_1510_202012232013/patch/amazone2/GLO/RMX1941EX/RMX1941EX_11.C.51_1510_202012232013/RMX1941EX_11_OTA_1510_all_xZs5CINOeuNI_d422b675eae5.ozip
  FIRMWARE_NAME: RMX1941EX_11_OTA_1510_all_xZs5CINOeuNI_d422b675eae5.ozip
  FIRMWARE_ZIP_NAME: RMX1941EX_11_OTA_1510_all_xZs5CINOeuNI.ozip
  TZ: Asia/Kolkata

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Checkout
         uses: actions/checkout@master
         
       - name: Downloading Ozip Now.. 
         run: |
            sudo -E apt-get -qq update
            sudo apt install brotli
            sudo apt install aria2 expect -y
            aria2c $FIRMWARE_LINK
             
       - name: Decrypting Ozip Now
         run: |
             sudo -E apt-get -qq update
             sudo apt-get install python-pip
             sudo -H pip install --upgrade pip
             sudo -H pip install setuptools wheel docopt pycryptodome zip
             wget https://raw.githubusercontent.com/siddhrsh/oppo_ozip_decrypt/master/ozipdecrypt.py
             sudo python ozipdecrypt.py $FIRMWARE_NAME
             sudo brotli -d ./out/system.new.dat.br
             sudo brotli -d ./out/vendor.new.dat.br
             cd out
             sudo wget https://raw.githubusercontent.com/siddhrsh/sdat2img/master/sdat2img.py
             sudo python sdat2img.py system.transfer.list system.new.dat system.img
             sudo python sdat2img.py vendor.transfer.list vendor.new.dat vendor.img
             cd ..
             zip -r $FIRMWARE_ZIP_NAME.zip ./out/*

       - name: Upload Decrypted Zip
         run: |
              expect -c " 
              spawn sftp ${{ secrets.SFUSER }}@frs.sourceforge.net
              expect \"yes/no\"
              send \"yes\r\"
              expect \"Password\"        
              send \"${{ secrets.SFPASS }}\r\"
              expect \"sftp> \"
              send \"cd ${{ secrets.SFDIR }}\r\"
              set timeout -1
              send \"put $FIRMWARE_ZIP_NAME.zip\r\"
              expect \"Uploading\"
              expect \"100%\"
              expect \"sftp>\"
              send \"bye\r\"
              interact"     
